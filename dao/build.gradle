plugins {
    id 'java'
}

group 'com.whyhowinfo'
version '1.0.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    //mybatis
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.0'
//自动代码生成
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.5'
//mysql连接库
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.39'
//alibaba数据池
    compile group: 'com.alibaba', name: 'druid', version: '1.1.12'
}

configurations {
    mybatisGenerator
}

dependencies {
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.39'
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/mysql-generate.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties;
}

task mybatisGenerate {
    def properties = getDbProperties()
    ant.properties['driverClass'] = properties.getProperty("driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("url")
    ant.properties['userId'] = properties.getProperty("username")
    ant.properties['password'] = properties.getProperty("password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = "test.model"
    ant.properties['mapperPackage'] = "test.dao"
    ant.properties['sqlMapperPackage'] = "mybatis"

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
//
//    ant.mbgenerator(overwrite: true,
//            configfile: 'src/main/resources/generatorConfig.xml', verbose: true) {
//        propertyset {
//            propertyref(name: 'userId')
//            propertyref(name: 'driverClass')
//            propertyref(name: 'connectionURL')
//            propertyref(name: 'password')
//            propertyref(name: 'src_main_java')
//            propertyref(name: 'src_main_resources')
//            propertyref(name: 'modelPackage')
//            propertyref(name: 'mapperPackage')
//            propertyref(name: 'sqlMapperPackage')
//        }
//    }
}
